
Not all classes can be interesting. Some are too boring, and in case of offline classes, it's not always possible to run away too. On one such class, Vaibhav and Atul got too bored and so, they decided to play a game.
Atul gave Vaibhav an integer array AA of length NN, and two more integers K and L. He asked Vaibhav to form K new arrays of L length from the array A, such that the sum of all integers present in the new K arrays combined should be as maximum as possible. Each new array should be a subarray of array A and any element of array A can be part of at most one new array. 
As the size of array A can be large, Vaibhav needs your help in the calculation. Help Vaibhav to solve the problem.
Input Format

First line will contain T, number of testcases. Each test case contains 2 lines.
First line of each test case contains 3 integers N, K and L, as described in the question.
Second line contains N space separated integers A1,A2,...,AN.

Output Format
For each test case, output the maximum possible sum. If it is not possible to form K arrays of size L from array A, output −1.
Constraints

1≤T≤104
1≤N≤104
1≤K≤102
1≤L≤103
1≤A1,A2,...,AN≤109
Sum of N∗K over all test case doesn't exceed 106


                        Sample Input 1
                        





2
10 3 4
1 2 3 4 5 6 7 8 9 10
10 2 3
1 2 3 4 5 6 7 8 9 10



                        Sample Output 1
                        





-1
45


Explanation
In test case 1, no possible solution is there.
In test case 2, the best possible solution is to pick subarrays {{5,6,7},{8,9,10}}.

