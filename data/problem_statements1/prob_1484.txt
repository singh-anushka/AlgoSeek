
You have an array PP of length NN. Also in front of you, there are N bags of gems lined up in a row where the i-th bag from the left has 2Pi gems in it. 
You can take any bags of gems from them following the given rules:

You are not allowed to take two adjacent bags. 
You are allowed to take at most k bags.

For each value of k from 1 to ⌈N2⌉, find the maximum number of gems you can obtain.
Since the answers may be too large, print them modulo 109+7.
Input Format

The first line contains T - the number of test cases. Then the test cases follow.
The first line of each test case contains an integer N - the number of bags of gems.
The second line contains N space-separated integers P1,P2,…,PN.

Output Format
For each test case, print a single line containing ⌈N2⌉ integers. The k-th of them is the maximum number of gems you can obtain if you take no more than k bags, modulo 109+7. 
Constraints

1≤T≤105
2≤N≤2⋅105
0≤Pi≤N
the sum of N over all test cases does not exceed 2⋅105


                        Sample Input 1
                        





4
3
0 3 0
4
1 3 2 0
6
2 4 4 3 3 1
5
5 5 5 5 5



                        Sample Output 1
                        





8 8
8 9
16 24 28
32 64 96


Explanation
Test Case-1:

For k=1: It is optimal to pick index: 2. Therefore the number of gems =2P2=8.
For k=2: Optimal selection is exactly same.

Test Case-3:

For k=1: It is optimal to pick indices: 3. Therefore the number of gems =2P3=16.
For k=2: It is optimal to pick indices: 2,5. Therefore the number of gems =2P2+2P5=24.
For k=3: It is optimal to pick indices: 1,3,5. Therefore the number of gems =2P1+2P3+2P5=28.


