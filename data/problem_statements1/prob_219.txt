
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chefland is a city that always changes. It can be viewed as a grid with a fixed width NN (with NN columns numbered 11 through NN) and changing height. The rows of the grid are numbered with positive integers. Each cell in Chefland has a colour, which is either '0' or '1'.
From a cell (x,y)(x,y), it is possible to move to one of the cells (x+1,y−1)(x+1,y−1), (x+1,y)(x+1,y) and (x+1,y+1)(x+1,y+1), but only if the destination cell exists and has the same colour as the origin cell.
In Chefland, rows sometimes appear or disappear. However, a row may only appear at the bottom of the grid or disappear if it was at the top of the grid; whenever that happens, rows are renumbered with positive integers from top to bottom in such a way that the topmost row has number 11.
Now, Chef received a difficult task ― keeping track of the number of ways to move from the topmost row to the bottommost row. He is asking you to help him answer QQ queries. Initially, the grid is empty ― it has 00 rows. There are three types of queries:

add L: You are given a string LL with length NN. A new row appears; for each valid ii, the colour of the cell in this row and the ii-th column is LiLi.
remove: The topmost row disappears.
path c d: Find the number of paths starting in the cell in the topmost row and cc-th column and ending in the cell in the bottommost row and dd-th column. Two paths are considered different if there is a cell which is visited in one path, but not in the other. Since this number can be very big, compute it modulo 1,000,000,0071,000,000,007.

Input

The first line of the input contains two space-separated integers NN and QQ.
Each of the following QQ lines describes a query in the format described above.

Output
For each path query, print a single line containing one integer ― the number of paths modulo 1,000,000,0071,000,000,007.
Constraints

1≤N≤201≤N≤20
1≤Q≤300,0001≤Q≤300,000
|L|=N|L|=N
LL contains only characters '0' and '1'
1≤c,d≤N1≤c,d≤N
for each path or remove query, the grid is not empty

Subtasks
Subtask #1 (10 points):

N≤10N≤10
Q≤300Q≤300

Subtask #2 (30 points):

N≤10N≤10
Q≤30,000Q≤30,000

Subtask #3 (60 points): original constraints

                        Sample Input 1
                        





5 9
add 11101
path 1 2
add 01110
path 3 2
add 00100
path 3 3
add 10110
remove
path 1 2



                        Sample Output 1
                        





0
1
3
2


Explanation
After the first query, the city is:
11101

There is no way to move from column 11 to column 22.
After the third query, the city is:
11101
01110

There is only one way to move from the cell (1,3)(1,3) to the cell (2,2)(2,2): (1,3)→(2,2)(1,3)→(2,2).
After the fifth query, the city is:
11101
01110
00100

There are 33 ways to move from the cell (1,3)(1,3) to the cell (3,3)(3,3):

(1,3)→(2,2)→(3,3)(1,3)→(2,2)→(3,3)
(1,3)→(2,3)→(3,3)(1,3)→(2,3)→(3,3)
(1,3)→(2,4)→(3,3)(1,3)→(2,4)→(3,3)

After the eighth query, the city is:
01110
00100
10110

There are 22 ways to move from the cell (1,1)(1,1) to the cell (3,2)(3,2):

(1,1)→(2,1)→(3,2)(1,1)→(2,1)→(3,2)
(1,1)→(2,2)→(3,2)(1,1)→(2,2)→(3,2)


