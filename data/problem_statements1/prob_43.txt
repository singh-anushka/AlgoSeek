
Read problems statements in Hindi, Mandarin chinese, Russian, Vietnamese and Bengali as well.
Chef likes to solve difficult tasks. This time, he tried to solve the Big Famous Unsolvable A+B=CA+B=C. One of his friends played a prank on Chef and randomly shuffled the bits in AA and B (independently in each number). However, the funny thing is that the sum of the resulting numbers remained C even after shuffling.
Chef is now wondering: in how many ways is it possible to shuffle the bits of A and the bits of B such that their sum after shuffling is equal to C? Let's denote the integers obtained by shuffling the bits of A and B by As and Bs respectively; two ways (As1,Bs1) and (As2,Bs2) are considered distinct if As1≠As2 or Bs1≠Bs2.
It is allowed to add any number (possibly zero) of leading zeroes, i.e. bits 0, to A and any number of leading zeroes to B before shuffling the bits.
Input

The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.
The first and only line of each test case contains three space-separated integers A, B and C. 

Output
For each test case, print a single line containing one integer — the number of ways to shuffle the bits.
Constraints

1≤T≤1,000
1≤A,B,C≤109
A+B=C

Subtasks
Subtask #1 (50 points): 1≤A,B,C≤105
Subtask #2 (50 points): original constraints
Example Input
2
1 2 3
369 428 797

Example Output
2
56

Explanation
Example case 1: We can consider A=01 and B=10 in binary. Then, there are two possible ways: swapping the two bits of A and the two bits of B (As=10, Bs=01 in binary, 2 and 1 in decimal representation) or not shuffling any bits.

