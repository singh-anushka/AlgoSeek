
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Chef opened a chain of restaurants in Chefland and invited his KK friends (numbered 11 through KK) to move there.
Chefland can be represented by a tree with NN vertices (numbered 11 through NN). For each valid ii, the ii-th vertex has a type cici. There are K+1K+1 types of vertices: ci=0ci=0 means that there is a restaurant in vertex ii, while 1≤ci≤K1≤ci≤K means that there is a house with a colour cici in vertex ii.
For each valid ii, the ii-th friend of Chef agrees to move to Chefland only if he will live in a house of colour ii. Friends want to meet frequently, so Chef needs to choose houses for his friends in such a way that for each pair of friends, there is at least one restaurant on the unique simple path between their houses.
Find the number of ways to choose houses for all friends. Formally, you have to find the number of sequences of vertices (v1,v2,…,vK)(v1,v2,…,vK) such that:

for each ii (1≤i≤K1≤i≤K), cvi=icvi=i
for each ii and jj (1≤i<j≤K1≤i<j≤K), there is at least one vertex with type 00 on the path between vivi and vjvj

Since the number of these sequences could be large, compute it modulo 998,244,353998,244,353.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains two space-separated integers NN and KK.
The second line contains NN space-separated integers c1,c2,…,cNc1,c2,…,cN.
Each of the next N−1N−1 lines contains two space-separated integers uu and vv denoting that vertices uu and vv are connected by an edge.

Output
For each test case, print a single line containing one integer — the number of ways to choose houses modulo 998,244,353998,244,353.
Constraints

1≤T≤101≤T≤10
1≤N≤1051≤N≤105
2≤K≤112≤K≤11
0≤ci≤K0≤ci≤K for each valid ii
1≤u,v≤N1≤u,v≤N
the graph described on the input is a tree
the sum of NN over all test cases does not exceed 105105

Subtasks
Subtask #1 (5 points):

N≤50N≤50
K≤3K≤3

Subtask #2 (10 points):

N≤2,000N≤2,000
K≤2K≤2

Subtask #3 (10 points): K≤2K≤2
Subtask #4 (10 points): K≤3K≤3
Subtask #5 (10 points):

K≤7K≤7
the tree is linear — for each valid ii, the ii-th edge on the input connects vertices ii and (i+1)(i+1)

Subtask #6 (40 points): K≤7K≤7
Subtask #7 (15 points): original constraints

                        Sample Input 1
                        





2
5 2
1 2 0 1 2
1 3
2 3
3 4
3 5
10 3
2 1 0 1 3 2 3 2 0 3
1 2
3 1
3 4
5 4
4 6
3 7
8 7
9 10
9 1



                        Sample Output 1
                        





4
7


Explanation
Example case 1: The 44 valid sequences are (1,2)(1,2), (1,5)(1,5), (4,2)(4,2) and (4,5)(4,5).
Example case 2: The 77 valid sequences are:

(2,6,7)(2,6,7)
(2,6,10)(2,6,10)
(2,8,5)(2,8,5)
(2,8,10)(2,8,10)
(4,1,7)(4,1,7)
(4,1,10)(4,1,10)
(4,8,10)(4,8,10)


