
Vishesh just found an array AA having NN positive integers. He hates even numbers and would like to make the array full of only odd numbers. To do so, he is allowed to do the following operation.

Pick a positive integer X such that X=2Y for some non-negative integer Y. Then, for all elements Ai in A, if Ai is divisible by X, then we divide Ai by X (in other words, we assign Ai←AiX).

Let's define f(B) as the minimum operations required to make an array B have only odd numbers using the operation described above. Find the sum of f(a) over all subarrays a of A.
Note: A subarray of A is acquired by removing some (possibly none) elements from the beginning and some (possible none) elements from the end of A.
Input Format

The first line of each input contains T - the number of test cases. The test cases then follow.
The first line of each test case contains an integer N - the size of A.
The second line of each test case contains N space-separated integers A1,A2,…,AN - the array A.

Output Format
For each test case, output on a single line the answer to the problem.
Constraints

1≤T≤1000
1≤N≤105
1≤Ai≤106
Sum of N over all test cases is not more than 5⋅105


                        Sample Input 1
                        





2
3
1 2 4
3
1 2 1



                        Sample Output 1
                        





7
4


Explanation

Test case 1:
[1] requires 0 operations.
[1,2] requires 1 operation.
[1,2,4] requires 2 operations.
[2] requires 1 operation.
[2,4] requires 2 operations.
[4] requires 1 operation.

Therefore, sum of f(a) over all subarrays a of A is 7.

Test case 2:
[1] requires 0 operations.
[1,2] requires 1 operation.
[1,2,1] requires 1 operation.
[2] requires 1 operation.
[2,1] requires 1 operation.
[1] requires 0 operations.

Therefore, sum of f(a) over all subarrays a of A is 4.

